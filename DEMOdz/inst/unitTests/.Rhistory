source("test_DEMOdz.R")
runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz")
source("test_DEMOdz.R")
q()
source("test_DEMOdz.R")
is(dz)
"DataSet" %in% is(dz)
"Dataset" %in% is(dz)
classes
wdth(1000); getManifest(dz)
print(load("../extdata/tbl.ptHistory.RData"))
tbl.history <- tbl.ptHistory
save(tbl.history, file="../extdata/tbl.history.RData")
q()
source("test_DEMOdz.R")
?Classes
language
new("language")
showClass("language")
new(Dataset)
new("Dataset")
q()
library(Dataset)
Dataset()
q()
source("test_DEMOdz.R")
Dataset()
q()
source("test_DEMOdz.R")
tbl.manifest
wdth(1000)
tbl.manifest
getItemName(dz)
getItemNames(dz)
length(getItemNames(dz))
dim(tbl.manifest)
source("test_DEMOdz.R"); testConstructor()
source("test_DEMOdz.R"); testConstructor()
classes
source("test_DEMOdz.R"); testConstructor()
source("test_DEMOdz.R"); testConstructor()
source("test_DEMOdz.R"); testConstructor()
source("test_DEMOdz.R"); testConstructor()
wdth(1000)
tbl.manifest
setdiff(expected.rownames, rownames(tbl))
dir(dir)
print(load(file.path(dir, "events.RData")))
class(history)
head(history)
)
unique(tbl$class)
setdiff(expected.categories, tbl$category)
source("test_DEMOdz.R"); testManifestAndDataConsistency()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
runTests
tbl.manifest
source("test_DEMOdz.R"); testMatrices()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
dz
traceback()
q()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
nchar(item)
substr(item, 1, 20)
x <- fromJSON(item)
class(x)
class(item.as.json)
Q
source("test_DEMOdz.R"); runTests()
c
c
source("test_DEMOdz.R"); runTests()
c
source("test_DEMOdz.R"); runTests()
dim(tbl.history)
dz
slotNames(dz)
dz@subjectHistory
ls(dz@dictionary)
dz@dictionary$tbl.history
dz@manifest
subset(dz@manifest, category=="foo")$variable
x <- new.env(parent=emptyenv())
x$a <- 99
x$b <- letters
rm("b", env=x)
?rm
m
x
x <- new.env(parent=emptyenv())
x$b <- letters
x$a <- 99
ls(x)
rm("b", pos=x)
ls(x)
q()
library(DEMOdz)
dz <- DEMOdz()
table.variable
wdth(1000)
tbl.manifest
Q
q()
library(DEMOdz)
dz <- DEMOdz()
table.variable
evnetList.variable
eventList.variable
n
eventList.variable == character(0)
eventList.variable
q()
library(DEMOdz)
dz <- DEMOdz()
eventList.variable
table.variable
n
eventList.variable
x <- character(0)
nchar(x)
q()
source("test_DEMOdz.R"); runTests()
dz <- DEMOdz()
n
dz <- DEMOdz()
nchar(eventList.variable) == 0)
nchar(eventList.variable) == 0))
nchar(eventList.variable) == 0
nchar(eventList.variable)
nchar(eventList.variable) == integer(0)
Q
q()
library(DEMOdz)
dz <- DEMOdz()
nrow(tbl.eventList)
n
n
nrow(tbl.table)
n
n
table.variable
table.variable %in% ls(dictionary)
n
n
n
subjecHistory
subjectHistory
Q
q()
library(DEMOdz)
dz <- DEMOdz()
n
n
n
n
n
n
n
subjectHistory
Q
dz <- DEMOdz()
n
n
n
n
table.variable
table.variable %in% ls(dictionary)
rm(table.variable, pos=dictionary)
>rm
?rm
rm(list=table.variable, pos = dictionary)
table.variable %in% ls(dictionary)
Q
q()
library(DEMOdz)
dz <- DEMOdz()
n
n
n
n
n
n
n
subjectHistory
ls(dictionary)
c
q()
library(DEMOdz)
dz <- DEMOdz()
c
dz
getSubjectHistory(dz)
dim(getTable(getSubjectHistory(dz)))
q()
source("test_DEMOdz.R"); runTests()
setdiff(expected.categories, tbl$category)
unique(tbl$category)
source("test_DEMOdz.R"); runTests()
length(getItemNames(dz));, nrow(tbl.manifest)
length(getItemNames(dz)); nrow(tbl.manifest)
tbl.manifest$category
quiet <- TRUE
dateframe.variables
dataframe.variables
dataframe.variables
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
subset(getManifest(dz), class=="matrix")
subset(getManifest(dz), class=="matrix")$variable[1]
class(mtx)
length(entities); length(features)
q()
source("test_DEMOdz.R"); runTests()
name
class(x)
class(x) %in% c("matrix", "data.frame")
Q
q()
source("test_DEMOdz.R"); runTests()
entities
features
n
n
n
n
n
all(is.na(entities))
!all(is.na(entities))
Q
q()
source("test_DEMOdz.R"); runTests()
c
class(x)
intersect(entities, rownames(x))
intersect(features, colnames(x))
x <- x[intersect(entities, rownames(x)), ]
x <- x[, intersect(features, colnames(x))]
x
Q
q()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
n
n
n
n
n
x
c
q()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
class(item)
is(item)
checkTrue("json" %in% is(item))
c
c
source("test_DEMOdz.R"); runTests()
name
c
name
c
print(load("../extdata/gbmPathways.json.RData"))
class("g.gbmPathways.json)
)
class(g.gbmPathways.json)
x <- toJSON(fromJSON(g.gbmPathways.json))
class(x)
g.gbmPathways.json <- x
save(g.gbmPathways.json, file="../extdata/gbmPathways.json.RData")
q()
source("test_DEMOdz.R"); runTests()
c
c
source("test_DEMOdz.R"); runTests()
dz <- DEMOdz()
tbl <- getManifest(dz)
tbl$class
tbl["gbmPathways.json.RData",]
t(tbl["gbmPathways.json.RData",])
q()
source("test_DEMOdz.R"); 
dz <- DEMOdz()
tbl <- getManifest(dz)
tbl
q()
library(DEMOdz)
dz <- DEMOdz()
tbl <- getManifest(dz)
tbl
q()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
category
subcategory
entity.count
length(geneSets)
geneSets
length(unlist(geneSets))
length(unlist(geneSets, use.names=FALSE))
lapply(geneSets, length)
print(load("../extdata/tumorGroups.Rdata"))
length(tumorGroups)
tumorGroups
Q
q()
source("test_DEMOdz.R"); runTests()
entity.count
c
q()
source("test_DEMOdz.R"); runTests()
c
c
source("test_DEMOdz.R"); runTests()
getItemNames(DEMOdz())
q()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
q()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
feature.count
Q
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
print(load("../extdata/genesets.RData"))
geneSets
source("test_DEMOdz.R"); runTests()
source("test_DEMOdz.R"); runTests()
dim(x)
entity.count; feature.count
c
dim(x)
entity.count; feature.count
c
entity.count; feature.count
entity.count; feature.count
c
entity.count; feature.count
entity.count; feature.count
c
entity.count; feature.count
entity.count; feature.count
c
entity.count; feature.count
dim(x)
c
dim(x)
entity.count; feature.count
c
entity.count; feature.count
entity.count; feature.count; dim(x)
Q
q()
source("test_DEMOdz.R")
runTests()
q()
