print(load("../../../DEMOdz/inst/extdata/genesets.RData"))
class(genesets)
genesets
dir()
print(load("../../../DEMOdz/inst/extdata/verhaakGbmClustersAugmented.RData"))
dim(tbl.verhaakPlus1)
head(tbl.verhaakPlus1)
rownames(subset(tbl.verhaakPlus1, cluster=="Classical"))
write(subset(tbl.verhaakPlus1, cluster=="Classical"), file="../extdata/TCGA.tumors/verhaak2010.Classical", sep="\n")
subset(tbl.verhaakPlus1, cluster=="Classical")
rownames(subset(tbl.verhaakPlus1, cluster=="Classical"))
class(rownames(subset(tbl.verhaakPlus1, cluster=="Classical")))
x <- rownames(subset(tbl.verhaakPlus1, cluster=="Classical"))
write(x, file="../extdata/TCGA.tumors/verhaak.2010.gbm.Classical", sep="\n")
unique(tbl.verhaakPlus1$cluster)
x <- rownames(subset(tbl.verhaakPlus1, cluster=="G-CIMP"))
x
write(x, file="../extdata/TCGA.tumors/verhaak.2010.gbm.GCIMP", sep="\n")
x <- rownames(subset(tbl.verhaakPlus1, cluster=="Proneural"))
write(x, file="../extdata/TCGA.tumors/verhaak.2010.gbm.Proneural", sep="\n")
x <- rownames(subset(tbl.verhaakPlus1, cluster=="Neural"))
write(x, file="../extdata/TCGA.tumors/verhaak.2010.gbm.Neural", sep="\n")
x <- rownames(subset(tbl.verhaakPlus1, cluster=="Mesenchymal"))
write(x, file="../extdata/TCGA.tumors/verhaak.2010.gbm.Mesenchymal", sep="\n")
 rownames(subset(tbl.verhaakPlus1, is.na(cluster)"))
)
 rownames(subset(tbl.verhaakPlus1, is.na(cluster)))
(subset(tbl.verhaakPlus1, is.na(cluster)))
 rownames(subset(tbl.verhaakPlus1, is.na(cluster)))
x <- rownames(subset(tbl.verhaakPlus1, is.na(cluster)))
write(x, file="../extdata/TCGA.tumors/verhaak.2010.gbm.unclassified", sep="\n")
library(Groups)
source("test_Groups.R")
dir
Group:::.loadFiles(dir)
Groups:::.loadFiles(dir)
q()
source("test_Groups.R")
Groups::.loadFiles()
Groups:::.loadFiles()
Groups:::.loadFiles(dir)
Groups:::.loadFiles(dir)
data.directory <- system.file(package="Groups", "extdata")
data.directory
subdirs
file.path(data.directory, "TCGA.tumors")
list.files(file.path(data.directory, "TCGA.tumors"))
scan("/Library/Frameworks/R.framework/Versions/3.2/Resources/library/Groups/extdata/TCGA.tumors/verhaak.2010.gbm.Classical", sep="\n", what=character(0))
  stopifnot(file.exists(data.directory))
  subdirs <- dir(data.directory)
  for(subdir in subdirs){
     printf("----- %s", dir)
     files <- list.files(file.path(data.directory, subdir))
     for(file in files){
        full.path <- file.path(data.directory, subdir, file)
        printf("full.path: %s (%s)", full.path, file.exists(full.path))
        contents <- scan(full.path, sep="\n", what=character(0))
        dictionary[[file]] <- contents
        } # for file
    } # for subdir

dictionary <- new.env(parent=emptyenv())
  stopifnot(file.exists(data.directory))
  subdirs <- dir(data.directory)
  for(subdir in subdirs){
     printf("----- %s", dir)
     files <- list.files(file.path(data.directory, subdir))
     for(file in files){
        full.path <- file.path(data.directory, subdir, file)
        printf("full.path: %s (%s)", full.path, file.exists(full.path))
        contents <- scan(full.path, sep="\n", what=character(0))
        dictionary[[file]] <- contents
        } # for file
    } # for subdir

ls(dictionary)
q()
source("test_Groups.R")
.loadFiles(dir)
Groups:::.loadFiles(dir)
dir
q()
source("test_Groups.R")
dir
Groups:::.loadFiles(dir)
n
n
subdirs
n
n
q()
source("test_Groups.R")
c
q()
source("test_Groups.R")
c
ls(x)
q()
source("test_Groups.R")
c
ls(x)
x$test4
source("test_Groups.R")
test.loadFiles()
c
q()
source("test_Groups.R"); test.loadFiles()
d
ls(d@groups)
q()
source("test_Groups.R"); test.loadFiles()
d
getGroupNames(d)
q()
source("test_Groups.R"); test.loadFiles()
getName(g)
q()
source("test_Groups.R"); test.loadFiles()
group.names
getGroup(g, group.names[1])
q()
source("test_Groups.R"); runTests()
g <- Groups()
getGroupNames(g)
geneSets <- c("random.24", "random.40", "test4")
save(geneSets, file="~/oncogit/Oncoscape/dataPackages/DEMOdz/inst/extdata/geneSets.Rdata")
class(geneSets
)
class( c("random.24", "random.40", "test4"))
class(list("random.24", "random.40", "test4"))
geneSets <- list("random.24", "random.40", "test4")
save(geneSets, file="~/oncogit/Oncoscape/dataPackages/DEMOdz/inst/extdata/geneSets.Rdata")
sort(grep("verhaak", getGroupNames(g), v=TRUE))
class(sort(grep("verhaak", getGroupNames(g), v=TRUE)))
class(as.list(sort(grep("verhaak", getGroupNames(g), v=TRUE))))
tumorGroups=list(verhaakPlusCIMP=as.list(sort(grep("verhaak", getGroupNames(g), v=TRUE))))
tumorGroups
save(tumorGroups, file="~/oncogit/Oncoscape/dataPackages/DEMOdz/inst/extdata/tumorGroups.Rdata")
q()
source("test_Groups.R"); runTests()
g <- Groups()
getGroupNames(g)
x <- getGroupNames(g)
dir("../../../DEMOdz/inst/extdata/")
print(load("../../../DEMOdz/inst/extdata/ericsEightGliomaClusters.RData"))
head(tbl.glioma8)
unique(tbl.glioma8)
rownames(tbl.glioma8, cluster=="nonCIMP.gainNRAS.mutTP53")
dim(tbl.glioma8)
rownames(subset(tbl.glioma8, cluster=="nonCIMP.gainNRAS.mutTP53"))
c <- "nonCIMP.gainNRAS.mutTP53"; write(rownames(subset(tbl.glioma8, cluster==c)), sep="\n", file=c)
unique(tbl.glioma8$cluster)
for(c in unique(tbl.glioma8$cluster)) write(rownames(subset(tbl.glioma8, cluster==c)), sep="\n", file=c)
dir()
for(c in unique(tbl.glioma8$cluster)) write(rownames(subset(tbl.glioma8, cluster==c)), sep="\n", file=sprint("../extdata/TCGA.tumors/%s",c))
for(c in unique(tbl.glioma8$cluster)) write(rownames(subset(tbl.glioma8, cluster==c)), sep="\n", file=sprintf("../extdata/TCGA.tumors/%s",c))
for(c in unique(tbl.glioma8$cluster)) write(rownames(subset(tbl.glioma8, cluster==c)), sep="\n", file=sprintf("../extdata/TCGA.tumors/glioma8.%s",c))
unique(tbl.glioma8)
meta.group
getGroupNames(gdb)
metagroupName <- "verhaak.2010.gbm"
ids.by.group
names(getItem(dataset, "tumorGroups"))
q()
source("test_Groups.R"); runTests()
names(tumorGroups)
meta.gropu
meta.group
member.group.names
ids.by.groups
ids.by.group
member.group.names
ids.by.group
checkTrue(member.group.names == names(ids.by.group)
)
ids.by.group
getItemNames(dataset)
getItem(dataset, "tbl.groupVizProps")
ids.by.group
length(unlist(ids.by.group, use.names=FALSE))
ids
grep("TCGA.12.0656", ids.by.group)
member.group.names
as.data.frame(ids.by.group)
library(plyr)
rbind.fill(lapply(ids.by.group, as.data.frame))
plyr::ldply(ids.by.group, rbind)
t(plyr::ldply(ids.by.group, rbind))
plyr::ldply(ids.by.group, rbind)
which("TCGA.06.0182" %in% ids.by.group )
lapply(member.group.names, function(group) intersect(ids, getGroup(gdb, group)))
x <- list()
data.frame(id=ids, group="", color="lightgray")
match("TCGA.12.0657", getGroup(gdb, metagroupName)
)
getGroup(gdb, metagroupName)
getGroupNames(gdb)
lapply(getGroupNames(gdb), function(name) "TCGA.12.0657" %in% getGroup(gdb, name))
which(lapply(getGroupNames(gdb), function(name) "TCGA.12.0657" %in% getGroup(gdb, name)))
which(as.logical(lapply(getGroupNames(gdb), function(name) "TCGA.12.0657" %in% getGroup(gdb, name))))
tbl.tmp
tbl.tmp <- data.frame(id=ids, group="", color="lightgray")
tbl.tmp
for(id in tbl.tmp$id) print(which(as.logical(lapply(getGroupNames(gdb), function(name) "TCGA.12.0657" %in% getGroup(gdb, name)))))
for(id in tbl.tmp$id) print(which(as.logical(lapply(getGroupNames(gdb), function(name) id %in% getGroup(gdb, name)))))
getGroupName(gdb)
getGroupNames(gdb)
member.group.names
member.group.names[5]
getGroup(member.group.names[5])
getGroup(gdb, member.group.names[5])
tbl.viz
meta.group
metagroupName
head(tbl.viz)
tbl.tmp
tbl.tmp
tbl.tmp
metagroupName
tbl.tmp
tbl.tmp
tbl.tmp
tbl.tmp
tbl.tmp
groups.for.ids
tbl.tmp
tbl.tmp
tbl.tmp
tbl.viz
match("GCIMP", tbl.viz$id)
grep("GCIMP", tbl.viz$id)
match("GCIMP", tbl.viz$id)
tbl.viz$color[match("GCIMP", tbl.viz$id)]
lapply(tbl.tmp$group, function(group) tbl.viz$color[match(group, tbl.viz$id)])
unlist(lapply(tbl.tmp$group, function(group) tbl.viz$color[match(group, tbl.viz$id)]))
tbl.tmp
tbl.tmp
tbl.viz
print(load("../../../DEMOdz/inst/extdata/tbl.groupVizProps.RData"))
tbl.groupVizProps
write.table(tbl.groupVizProps, sep="\t", quote=FALSE, file="junk")
read.table("junk", sep="\t")
tbl.groupVizProps <- read.table("junk", sep="\t")
save(tbl.groupVizProps, file="../../../DEMOdz/inst/extdata/tbl.groupVizProps.RData")
q()
source("test_Groups.R"); runTests()
source("test_Groups.R"); runTests()
tbl.tmp
sort(unique(tbl.tmp$group))
tbl.viz
sort(subset(tbl.viz, group==metagroupName)$color)
sort(tbl.tmp$color)
sort(unique(tbl.tmp$color))
head(tbl.tmp)
getGroup(gdb, "verhaak.2010.gbm.GCIMP")
head(tbl.tmp)
tbl.tmp
x <- tbl.tmp$color
names(x) <- tbl.tmp$id
x
library(jsonlite)
toJSON(x)
toJSON(as.list(x))
as.list(x)
   tumor.colors <- tbl.tmp$color
   names(tumor.colors) <- tbl.tmp$id

class(tumor.colors)
class(as.list(tumor.colors))
getItem(dataset, "tumorGroups")
subgroups
subgroups
subgroups
ids.by.group
ids.by.group
getNames(groupsDB)
getGroupNames(groupsDB)
subgroups
ids.by.group
tbl.work
ids
id <- "bogus"
groups.for.ids
group.shortened
target.group
target.groupWithTrailingDot
groups.for.ids[["bogus"]]
group.shortened
group
subgroups
index
is.integer(index)
length(index)
tbl.work
groups.for.ids
tbl.work
q()
source("test_Groups.R"); runTests()
source("test_Groups.R");
n
n
ids.by.group
n
n
dim(tbl.work)
tbl.work$id
ids
Q
source("test_Groups.R");
source("test_Groups.R");
index
c
source("test_Groups.R");
index
c
index
c
index
c
index
c
index
c
index
c
index
c
index
c
index
c
index
c
index
c
index
c
index
c
index
c
c
c
c
c
c
c
c
x
table(x)
table(unlist(x))
as.data.frame(table(unlist(x)))
xtab
xtab$blue
tbl.viz
subset(tbl.viz, group==target.group)
subset(tbl.viz, group==target.group & color=="chocolate")#id
subset(tbl.viz, group==target.group & color=="chocolate")$id
getGroupNames(groupsDB)
length(intersect(ids, getGroup(groupsDB, "verhaak.2010.gbm.Classical")))
source("test_Groups.R");runTests()
source("test_Groups.R");runTests()
c
c
c
c
Q
source("test_Groups.R");runTests()
source("test_Groups.R");runTests()
source("test_Groups.R");runTests()
x
xtab
tumor.type
tumor.type
count
count
getGroup(groupsDB, "nonCIMP.wtNRAS.mutTP53")
x
getGroupNames(groupsDB)
getGroup(groupsDB, "glioma8.nonCIMP.wtNRAS.wtTP53")
length(intersect(ids), getGroup(groupsDB, "glioma8.nonCIMP.wtNRAS.wtTP53"))
length(intersect(ids, getGroup(groupsDB, "glioma8.nonCIMP.wtNRAS.wtTP53")))
tumor.type <- subset(tbl.viz, group==target.group & color=="magenta")$id
tumor.type
length(intersect(ids, getGroup(groupsDB, tumor.type)))
tbl.xtab
target.group
tbl.viz
subset(tbl.viz, group==target.group & color=="orange")
subset(tbl.viz, group==target.group & color=="orange")$id
subset(tbl.viz, group==target.group & color=="magenta")$id
intersect(ids, getGroup(groupsDB, subset(tbl.viz, group==target.group & color=="magenta")$id))
getGroup(groupsDB, subset(tbl.viz, group==target.group & color=="magenta")$id)
getGroup(groupsDB, subset(tbl.viz, group==target.group & color=="magenta")
)
subset(tbl.viz, group==target.group & color=="magenta")
subset(tbl.viz, group==target.group & color=="magenta")$ID
subset(tbl.viz, group==target.group & color=="magenta")$id
getGroup(groupsDB, subset(tbl.viz, group==target.group & color=="magenta")$id)
getGroup(groupsDB, subset(tbl.viz, group==target.group & color=="magenta")$id[1])
subset(tbl.viz, group==target.group & color=="magenta")$id
tumor.type <- subset(tbl.viz, group==target.group & color=="magenta")$id  # "Classical"
tumor.type
   full.name <- sprintf("%s.%s", "glioma8", tumor.type)
full.name
getGroup(groupsDB, full.name)
length(intersect(ids, getGroup(groupsDB, full.name))
)
tumor.type
subgroups <- grep("glioma8", getGroups(groupsDB))
subgroups <- grep("glioma8", getGroupNames(groupsDB))
subgroups
subgroups <- grep("glioma8", getGroupNames(groupsDB), v=TRUE)
subgroups
mapped.count
q()
source("test_Groups.R");runTests()
source("test_Groups.R");runTests()
q()
source("test_Groups.R");runTests()
source("test_Groups.R");runTests()
source("test_Groups.R");runTests()
q()
source("test_Groups.R")
x
q()
source("test_Groups.R"); runTests()
source("test_Groups.R"); runTests()
q()
source("test_Groups.R"); runTests()
library(DEMOdz)
dz <- DEMOdz()
tbl.viz <- getItem(dz, "tbl.groupVizProps")
tbl.viz
target.group <- "glioma8"
subset(tbl.viz, group == target.group)
subset(tbl.viz, group == target.group, select=c("id", "color"))
unique(subset(tbl.viz, group == target.group, select=c("id", "color")))
source("test_Groups.R"); runTests()
q()
source("test_Groups.R"); runTests()
obj <- groupsDB
result
q()
source("test_Groups.R"); runTests()
target.group
obj
Q
q()
source("test_Groups.R"); runTests()
tbl.viz
c
c
legend
q()
source("test_Groups.R"); runTests()
getGroupNames(groupsDB)
q()
source("test_Groups.R"); runTests()
   dataset <- DEMOdz()
   groupsDB <- Groups()
   target.group <- "glioma8"
   tbl.viz <- getItem(dataset, "tbl.groupVizProps")

tbl.viz
x
getGroupNames(groupsDB)
sessionInfo()
q()
source("test_Groups.R"); runTests()
warnings()
options(warn=2)
source("test_Groups.R"); runTests()
q()
source("test_Groups.R"); runTests()
options(warn=2)
source("test_Groups.R"); runTests()
q()
options(warn=2)
source("test_Groups.R"); runTests()
options(warn=0)
source("test_Groups.R"); runTests()
getGroupNames(groupsDB)
tbl.viz
runTests()
q()
source("test_Groups.R"); runTests()
q()
source("test_Groups.R"); runTests()
source("test_Groups.R"); runTests()
source("test_Groups.R"); runTests()
xtab
Q
source("test_Groups.R"); runTests()
c
Q
q()
